{"_type":"export","__export_format":4,"__export_date":"2025-02-21T09:08:20.392Z","__export_source":"insomnia.desktop.app:v10.3.1","resources":[{"_id":"req_680b552c69364a3ea540ea7b40ae61b0","parentId":"fld_fc21153d20784f4f85781e050748798f","modified":1740047954728,"created":1739849991394,"url":"{{host}}:{{port}}/files/upload/67b2ab59f7e6135d6bff0e85","name":"upload","description":"","method":"POST","body":{"mimeType":"multipart/form-data","params":[{"id":"pair_c601da878ea24e9db95abbc97c08d026","name":"file","value":"","description":"","disabled":false,"type":"file","fileName":"C:\\Users\\Sertifikasi\\Downloads\\WhatsApp Image 2025-02-18 at 10.10.46.jpeg"}]},"parameters":[{"id":"pair_5a0c388b84aa4b6c867e757dbf6d9587","name":"","value":"","description":"","disabled":false}],"headers":[{"name":"Content-Type","value":"multipart/form-data"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2N2IyYjI5NmI2ZjRjNmI0MTVmYjJmMWMiLCJlbWFpbCI6InpvZGlhY3Rlc3RAZ21haWwuY29tIiwiaWF0IjoxNzQwMDQ3OTM4LCJleHAiOjE3NDA2NTI3Mzh9.YkpTlcYpsFxShxl0V--XYkef262qhSaCIilXYesqjS4"},"metaSortKey":-1739849991394,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_fc21153d20784f4f85781e050748798f","parentId":"wrk_b05b412453a84022b25bd0631461758d","modified":1739854850198,"created":1739849987412,"name":"files","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1739849987412,"environmentType":"kv","_type":"request_group"},{"_id":"wrk_b05b412453a84022b25bd0631461758d","parentId":null,"modified":1739155457557,"created":1739155457557,"name":"nest-mongo-chat","description":"","scope":"collection","_type":"workspace"},{"_id":"req_99c477459ebd453f8b0fa119f7fb075a","parentId":"fld_fc21153d20784f4f85781e050748798f","modified":1739867424879,"created":1739860299504,"url":"{{host}}:{{port}}/files/download/67b441d5b8804a37479bb37c","name":"download","description":"","method":"GET","body":{"mimeType":"multipart/form-data","params":[{"id":"pair_c601da878ea24e9db95abbc97c08d026","name":"file","value":"","description":"","disabled":false,"type":"file","fileName":"C:\\Users\\Sertifikasi\\Downloads\\WhatsApp Image 2025-02-18 at 10.10.46.jpeg"}]},"parameters":[{"id":"pair_5a0c388b84aa4b6c867e757dbf6d9587","name":"","value":"","description":"","disabled":false}],"headers":[{"name":"Content-Type","value":"multipart/form-data"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2N2IyYjI5NmI2ZjRjNmI0MTVmYjJmMWMiLCJlbWFpbCI6InpvZGlhY3Rlc3RAZ21haWwuY29tIiwiaWF0IjoxNzM5ODY0NjE1LCJleHAiOjE3NDA0Njk0MTV9.BL7T5kWCs3fC-1e_Wi0I1_VpgT-NaTrxRstRrNlAq-8"},"metaSortKey":-1739815937893,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_d48cad78bcec41e0bee507455c962515","parentId":"fld_aa0fddd912f04a8d8f8221db477c0456","modified":1739782082330,"created":1739781884392,"url":"http://localhost:3001/rooms","name":"create","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"name\": \"create test room\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2N2IyYjI5NmI2ZjRjNmI0MTVmYjJmMWMiLCJlbWFpbCI6InpvZGlhY3Rlc3RAZ21haWwuY29tIiwiaWF0IjoxNzM5NzgxMTc3LCJleHAiOjE3NDAzODU5Nzd9.X_McQ_ee03yEnHTk9hKbLtUiZq5OzvnRdLfuz41cyfE"},"metaSortKey":-1739781884392,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_aa0fddd912f04a8d8f8221db477c0456","parentId":"wrk_b05b412453a84022b25bd0631461758d","modified":1739781928397,"created":1739781880030,"name":"room","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1739781880030,"environmentType":"kv","_type":"request_group"},{"_id":"req_a257075411894739834ec75f08c4ca61","parentId":"fld_aa0fddd912f04a8d8f8221db477c0456","modified":1739783251060,"created":1739782112445,"url":"{{host}}:{{port}}/rooms","name":"get-all","description":"","method":"GET","body":{"mimeType":"application/json","text":"{\n\t\"name\": \"create test room\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2N2IyYjI5NmI2ZjRjNmI0MTVmYjJmMWMiLCJlbWFpbCI6InpvZGlhY3Rlc3RAZ21haWwuY29tIiwiaWF0IjoxNzM5NzgxMTc3LCJleHAiOjE3NDAzODU5Nzd9.X_McQ_ee03yEnHTk9hKbLtUiZq5OzvnRdLfuz41cyfE"},"metaSortKey":-1739778389529,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_cbe25c83579d4de5b10a78518ac453b2","parentId":"fld_aa0fddd912f04a8d8f8221db477c0456","modified":1739864363386,"created":1739782154573,"url":"{{host}}:{{port}}/rooms/67ac45b1da3b71d9b384c73a","name":"get-by-id","description":"","method":"GET","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":""},"metaSortKey":-1739776642097.5,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_5f8ee347302848fba01d5fd27dd62790","parentId":"fld_aa0fddd912f04a8d8f8221db477c0456","modified":1739783231104,"created":1739782836970,"url":"{{host}}:{{port}}3001/rooms/me","name":"me","description":"","method":"GET","body":{"mimeType":"application/json","text":""},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2N2IyYjI5NmI2ZjRjNmI0MTVmYjJmMWMiLCJlbWFpbCI6InpvZGlhY3Rlc3RAZ21haWwuY29tIiwiaWF0IjoxNzM5NzgxMTc3LCJleHAiOjE3NDAzODU5Nzd9.X_McQ_ee03yEnHTk9hKbLtUiZq5OzvnRdLfuz41cyfE"},"metaSortKey":-1739775768381.75,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_294b18a04614467d82957d5f5a4f8d1f","parentId":"fld_072b0afd3dd24aacaa8aeba8d8216e2e","modified":1739783189947,"created":1739774894666,"url":"{{host}}t:{{port}}/horoscope/zodiac","name":"zodiac","description":"","method":"GET","body":{"mimeType":"application/json","text":"{\n\t\"date\":\"2021-05-11\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{},"metaSortKey":-1739774894666,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_072b0afd3dd24aacaa8aeba8d8216e2e","parentId":"wrk_b05b412453a84022b25bd0631461758d","modified":1739774845928,"created":1739774845928,"name":"horoscope","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1739774845928,"environmentType":"kv","_type":"request_group"},{"_id":"req_6d4b616a0b454fea8f77c8ce5070effe","parentId":"fld_072b0afd3dd24aacaa8aeba8d8216e2e","modified":1739783210607,"created":1739775242871,"url":"{{host}}:{{port}}/horoscope/chinese-zodiac","name":"chinese-zodiac","description":"","method":"GET","body":{"mimeType":"application/json","text":"{\n\t\"date\":\"2021-05-11\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{},"metaSortKey":-1739474369305.5,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_28e0ddb4ebb44201bef41e305f4281f1","parentId":"fld_dc240c79656040d8931374713dc463d8","modified":1739783107916,"created":1739173843945,"url":"{{host}}:{{port}}/users/me","name":"me","description":"","method":"GET","body":{},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/10.3.0"}],"authentication":{"type":"bearer","token":"eyJhbGciOiIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2N2IwMDcwZDYwMDU5MjgzYTQwNzA0MzUiLCJlbWFpbCI6ImNoYWRkZkBnbWFpbC5jb20iLCJpYXQiOjE3Mzk1OTAzOTksImV4cCI6MTczOTU5MTI5OX0.m1AwfUz5Wedqa3sa9AqNxUI1kQPSD6K50bsqsQqZ5H4"},"metaSortKey":-1739173843945,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_dc240c79656040d8931374713dc463d8","parentId":"wrk_b05b412453a84022b25bd0631461758d","modified":1739783095835,"created":1739173835652,"name":"user","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1739173835652,"environmentType":"kv","_type":"request_group"},{"_id":"req_87e2250248a9488a89dd37c5bf934b88","parentId":"fld_dc240c79656040d8931374713dc463d8","modified":1739783128862,"created":1739177676142,"url":"{{host}}{{port}}/users/update","name":"update","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n\t\"name\": \"zodiactest\",\n\t\"birthDate\": \"1991-02-16\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.0"}],"authentication":{"type":"bearer","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2N2IyYjI5NmI2ZjRjNmI0MTVmYjJmMWMiLCJlbWFpbCI6InpvZGlhY3Rlc3RAZ21haWwuY29tIiwiaWF0IjoxNzM5NzY2NDQ1LCJleHAiOjE3NDAzNzEyNDV9.Se3JMsfPV8x8wPURBX6H-prIlOgGrdaDRfk7rF-5xzc"},"metaSortKey":-1739165600601,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_34d187aea4c14d1d80f438dc03d197ae","parentId":"fld_dc240c79656040d8931374713dc463d8","modified":1739949795205,"created":1739775816248,"url":"{{host}}:{{port}}/users/search","name":"search","description":"","method":"GET","body":{"mimeType":"application/json","text":"{\n\t\"query\": \"testuser\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.0"}],"authentication":{"type":"bearer","token":"import { Test, TestingModule } from '@nestjs/testing';import { INestApplication, ValidationPipe } from '@nestjs/common';import * as request from 'supertest';import { App } from 'supertest/types';import { MongoMemoryServer } from 'mongodb-memory-server';import mongoose from 'mongoose';import { Express } from 'express';import { AppModule } from './../src/app.module';import { IsEmail } from 'class-validator';import { UpdateUserDto } from 'src/user/dto';let mongod: MongoMemoryServer;describe('AppController (e2e)', () => {  let app: INestApplication<App>;  let server: any;  let jwtAccessToken: string;  beforeAll(async () => {    //setup database use mongodb memoery server    mongod = await MongoMemoryServer.create();    const uri = mongod.getUri();    process.env.DATABASE_URL = uri;     // Load the entire application module    const moduleFixture: TestingModule = await Test.createTestingModule({      imports: [AppModule],    }).compile();    app = moduleFixture.createNestApplication();    // Apply global validation pipe    app.useGlobalPipes(new ValidationPipe({ whitelist: true, transform: true }));    await app.init();    server = app.getHttpServer();  });  const validUser = {    username: 'testuser',    name:'test use',    email: 'test@example.com',    password: 'Test1234!',  };  const invalidUser = {    username: 'testuser',    email: 'invalid-email',//invalid email    password: 'Test1234!',  };  describe('/auth', () => {    describe('/auth/register', () => {      it('should return a new user and jwt acces token', async () => {               const response  = await request(server)                          .post('/auth/register')                          .send(validUser)                          .expect(201);        expect(response.body).toHaveProperty('user');        expect(response.body.user.email).toBe(validUser.email);        expect(response.body).toHaveProperty('accessToken');      });      it('should return bad request exception if user not valid', async () => {         await request(server)            .post('/auth/register')            .send(invalidUser )            .expect(400);      });          });    describe('/auth/login', () => {      it('should be return a user and JWT accessToken if user valid', async() => {          const loginDto = {            email: validUser.email,            password: validUser.password          };            const response = await request(server)                          .post('/auth/login')                          .send(loginDto)                          .expect(200);                expect(response.body).toHaveProperty('user');          expect(response.body).toHaveProperty('accessToken');          jwtAccessToken = response.body.accessToken;      });      it('should be throw bad request exceptionif user not valid', async () =>{          const invalidLoginDto = {            email: invalidUser.email,            password: invalidUser.password          };          await request(server)                .post('/auth/login')                .send()                .expect(400);      });    });  });  describe('/users', () => {    describe('/users/me', () => {      it('should return user by valid jwt access token', async () =>{        const response = await request(server)                              .get('/users/me')                              .set('Authorization', `Bearer ${jwtAccessToken}`)                              .expect(200)        expect(response.body).toHaveProperty('email');      });      it('should return Unauthorized access if access token invalid',  async() => {        const response = await request(server)                .get('/users/me')                .expect(401);      });    });    describe('/users/update', () => {        it('should return User if the userDto isvalid', async () => {          const updateUserDto: UpdateUserDto = {            name: validUser.name,            birthPlace: 'Demak',            birthDate: '1996-06-14',            height: 175,            weight: 60,            horoscope: '',            zodiac: '',            interests: []          }          const response = await request(server)                  .put('/users/update')                  .set('Authorization', `Bearer ${jwtAccessToken}`)                  .send(updateUserDto)                  .expect(200);          expect(response.body).toHaveProperty('birthPlace');          expect(response.body.birthPlace).toBe(updateUserDto.birthPlace);                  });        it('should return bad request exception if the userDto is invalid', async () => {          const updateUserDto: UpdateUserDto = {            name: validUser.name,            birthPlace: 'Demak',            birthDate: '19960614', // invalid date            height: 175,            weight: 60,            horoscope: '',            zodiac: '',            interests: []          }          await request(server)                  .put('/users/update')                  .set('Authorization', `Bearer ${jwtAccessToken}`)                  .send(updateUserDto)                  .expect(400);                });    });    describe('/users/search', () => {      it('should return user list by query provided', async () =>{        const response = await request(server)            .get('/users/search')            .set('Authorization', `Bearer ${jwtAccessToken}`)            .send({ query: validUser.name })            .expect(200);        expect(response.body).toHaveProperty('users');        expect(response.body.users).toBeInstanceOf(Array);        expect(response.body.users.length).toBeGreaterThan(0);                        });          });  });  afterAll(async() => {    jest.clearAllTimers(); // Bersihkan timer    await mongoose.connection.close();     await mongoose.disconnect();    await mongod.stop();    await app.close();  });});"},"metaSortKey":-1739165600501,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_c218315b38fa4506a5f226abf8104caf","parentId":"fld_69e893135790445b97ba6f2446efb68a","modified":1739949713973,"created":1739155510769,"url":"{{host}}:{{port}}/auth/register","name":"register","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"email\": \"testmail@gmail.com\",\n\t\"username\": \"testuser\",\n\t\"name\": \"testname\",\n\t\"password\": \"defef\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.0"}],"authentication":{},"metaSortKey":-1739157357257,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_69e893135790445b97ba6f2446efb68a","parentId":"wrk_b05b412453a84022b25bd0631461758d","modified":1739864566400,"created":1739155507264,"name":"auth","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1739155507264,"environmentType":"kv","_type":"request_group"},{"_id":"req_2244cf2aaeca42418b3d726bba661052","parentId":"fld_69e893135790445b97ba6f2446efb68a","modified":1739864571119,"created":1739169675017,"url":"{{host}}:{{port}}/auth/login","name":"login","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"email\": \"zodiactest@gmail.com\",\n\t\"password\": \"123456\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.0"}],"authentication":{},"metaSortKey":-1739157357207,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_c638ea0cbf8a3015cef9c69f6249f2c2725a3718","parentId":"wrk_b05b412453a84022b25bd0631461758d","modified":1739783041842,"created":1739155457561,"name":"Base Environment","data":{"host":"localhost","port":"3001"},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1739155457561,"environmentType":"kv","kvPairData":[{"id":"envPair_788ff1c505644da4991b07f033ad2d32","name":"host","value":"localhost","type":"str","enabled":true},{"id":"envPair_47ef62aa1f4741e58e81e1491d815dd7","name":"port","value":"3001","type":"str","enabled":true}],"_type":"environment"},{"_id":"jar_c638ea0cbf8a3015cef9c69f6249f2c2725a3718","parentId":"wrk_b05b412453a84022b25bd0631461758d","modified":1739155457572,"created":1739155457572,"name":"Default Jar","cookies":[],"_type":"cookie_jar"}]}